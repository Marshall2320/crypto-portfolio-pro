
generator client { provider = "prisma-client-js" }
datasource db { provider = "sqlite"; url = env("DATABASE_URL") }

model User {
  id           String      @id @default(cuid())
  email        String      @unique
  name         String?
  portfolios   Portfolio[]
  createdAt    DateTime    @default(now())
}

model Portfolio {
  id           String      @id @default(cuid())
  name         String
  baseCurrency String      @default("usd")
  user         User        @relation(fields: [userId], references: [id])
  userId       String
  assets       AssetMap[]
  spotTxs      SpotTx[]
  futures      FuturesPos[]
  farming      FarmingPos[]
  createdAt    DateTime    @default(now())
}

model AssetMap {
  id           String   @id @default(cuid())
  symbol       String
  coingeckoId  String
  portfolio    Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId  String

  @@unique([portfolioId, symbol])
}

model SpotTx {
  id           String    @id @default(cuid())
  date         DateTime
  asset        String
  side         String    // "buy" | "sell"
  qty          Decimal
  price        Decimal
  fee          Decimal   @default(0)
  note         String?
  portfolio    Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId  String
}

model FuturesPos {
  id           String    @id @default(cuid())
  date         DateTime
  asset        String
  side         String    // "long" | "short"
  qty          Decimal
  entry        Decimal
  leverage     Decimal   @default(0)
  tp           Decimal?
  sl           Decimal?
  fee          Decimal   @default(0)
  note         String?
  isOpen       Boolean   @default(true)
  portfolio    Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId  String
}

model FarmingPos {
  id           String    @id @default(cuid())
  date         DateTime
  platform     String?
  asset        String
  qty          Decimal
  apr          Decimal?  // % APR (informativo)
  rewardsAsset String?
  rewardsQty   Decimal?  @default(0)
  note         String?
  portfolio    Portfolio @relation(fields: [portfolioId], references: [id])
  portfolioId  String
}

model PriceCache {
  id          String    @id @default(cuid())
  coingeckoId String    @unique
  currency    String
  price       Decimal
  updatedAt   DateTime  @updatedAt
}
